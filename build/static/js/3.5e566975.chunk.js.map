{"version":3,"sources":["components/TreeListItem/TreeListItem.tsx"],"names":["TreeListItem","props","state","showPopup","itemChildData","id","axios","get","then","response","childData","data","filter","element","parentId","setState","length","alert","catch","error","console","log","className","onClick","getChildren","this","name","map","key","Component"],"mappings":"qQAIaA,EAAb,YACE,WAAmBC,GAAa,IAAD,8BAC7B,4CAAMA,KACDC,MAAQ,CACXC,WAAW,EACXC,cAAe,IAJY,EADjC,yEASqBC,GAAa,IAAD,OAC7BC,IACGC,IADH,wDAEGC,MAAK,SAAAC,GACJ,IAAMC,EAAYD,EAASE,KAAKC,QAC9B,SAACC,GAAD,OAAkBA,EAAQC,WAAaT,KAEzC,EAAKU,SAAS,CACZZ,WAAY,EAAKD,MAAMC,UACvBC,cAAeM,IAEQ,IAArBA,EAAUM,QACZC,MAAM,gCAGTC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAzBpB,+BA6BY,IAAD,OACP,OACE,yBAAKG,UAAU,mBACb,4BACEA,UAAU,oBACVC,QAAS,kBAAM,EAAKC,YAAY,EAAKvB,MAAMI,MAF7C,UAMA,0BAAMiB,UAAU,mBAAmBG,KAAKxB,MAAMyB,MAC7CD,KAAKvB,MAAMC,WAAasB,KAAKvB,MAAME,cAChCqB,KAAKvB,MAAME,cAAcuB,KAAI,SAACd,GAC5B,OACE,kBAACb,EAAD,CACE4B,IAAKf,EAAQR,GACbA,GAAIQ,EAAQR,GACZqB,KAAMb,EAAQa,KACdZ,SAAUD,EAAQC,cAIxB,QAlDZ,GAAkCe,aAwDnB7B","file":"static/js/3.5e566975.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./TreeListItem.css\";\r\nimport axios from \"axios\";\r\n\r\nexport class TreeListItem extends Component<any, any> {\r\n  public constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      showPopup: false,\r\n      itemChildData: []\r\n    };\r\n  }\r\n\r\n  public getChildren(id: number) {\r\n    axios\r\n      .get(`https://5e4a36256eafb7001488c115.mockapi.io/elements`)\r\n      .then(response => {\r\n        const childData = response.data.filter(\r\n          (element: any) => element.parentId === id\r\n        );\r\n        this.setState({\r\n          showPopup: !this.state.showPopup,\r\n          itemChildData: childData\r\n        });\r\n        if (childData.length === 0) {\r\n          alert(\"this item has no children\");\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tree-list__item\">\r\n        <button\r\n          className=\"tree-list__button\"\r\n          onClick={() => this.getChildren(this.props.id)}\r\n        >\r\n          тоб\r\n        </button>\r\n        <span className=\"tree-list__text\">{this.props.name}</span>\r\n        {this.state.showPopup && this.state.itemChildData\r\n          ? this.state.itemChildData.map((element: any) => {\r\n              return (\r\n                <TreeListItem\r\n                  key={element.id}\r\n                  id={element.id}\r\n                  name={element.name}\r\n                  parentId={element.parentId}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TreeListItem;\r\n"],"sourceRoot":""}