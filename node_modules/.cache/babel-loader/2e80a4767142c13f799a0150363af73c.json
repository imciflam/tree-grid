{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Marina.Vitalia\\\\source\\\\repos\\\\tree-grid\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Marina.Vitalia\\\\source\\\\repos\\\\tree-grid\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Marina.Vitalia\\\\source\\\\repos\\\\tree-grid\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Marina.Vitalia\\\\source\\\\repos\\\\tree-grid\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Marina.Vitalia\\\\source\\\\repos\\\\tree-grid\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import\"./TreeListItem.css\";import axios from\"axios\";export var TreeListItem=/*#__PURE__*/function(_Component){_inherits(TreeListItem,_Component);function TreeListItem(props){var _this;_classCallCheck(this,TreeListItem);_this=_possibleConstructorReturn(this,_getPrototypeOf(TreeListItem).call(this,props));_this.state={showPopup:false,itemChildData:[]};return _this;}_createClass(TreeListItem,[{key:\"getChildren\",value:function getChildren(id){console.log(id);//get elements for which current id == parent id\naxios.get(\"http://5e4a36256eafb7001488c115.mockapi.io/elements\").then(function(response){console.log(response.data);}).catch(function(error){console.log(error);});this.setState({showPopup:!this.state.showPopup,itemChildData:{name:\"mock\",parentId:\"1\"}});}},{key:\"render\",value:function render(){var _this2=this;console.log(this.props);return React.createElement(\"div\",{className:\"tree-list__item\"},this.props.parentId==null?React.createElement(\"button\",{onClick:function onClick(){return _this2.getChildren(_this2.props.id);}},\">\"):\"\",React.createElement(\"span\",{className:\"tree-list__text\"},this.props.name),this.state.showPopup?React.createElement(TreeListItem,this.state.itemChildData):\"\");}}]);return TreeListItem;}(Component);export default TreeListItem;","map":{"version":3,"sources":["C:/Users/Marina.Vitalia/source/repos/tree-grid/src/components/TreeListItem.tsx"],"names":["React","Component","axios","TreeListItem","props","state","showPopup","itemChildData","id","console","log","get","then","response","data","catch","error","setState","name","parentId","getChildren"],"mappings":"2rBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,UAAaC,CAAAA,YAAb,sEACE,sBAAmBC,KAAnB,CAA+B,8CAC7B,8EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,SAAS,CAAE,KADA,CAEXC,aAAa,CAAE,EAFJ,CAAb,CAF6B,aAM9B,CAPH,yEASqBC,EATrB,CASiC,CAC7BC,OAAO,CAACC,GAAR,CAAYF,EAAZ,EACA;AACAN,KAAK,CACFS,GADH,CACO,qDADP,EAEGC,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChBJ,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB,EACD,CAJH,EAKGC,KALH,CAKS,SAACC,KAAD,CAAgB,CACrBP,OAAO,CAACC,GAAR,CAAYM,KAAZ,EACD,CAPH,EASA,KAAKC,QAAL,CAAc,CACZX,SAAS,CAAE,CAAC,KAAKD,KAAL,CAAWC,SADX,CAEZC,aAAa,CAAE,CAAEW,IAAI,CAAE,MAAR,CAAgBC,QAAQ,CAAE,GAA1B,CAFH,CAAd,EAID,CAzBH,uCA2BW,iBACPV,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB,EACA,MACE,4BAAK,SAAS,CAAC,iBAAf,EACG,KAAKA,KAAL,CAAWe,QAAX,EAAuB,IAAvB,CACC,8BAAQ,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACC,WAAL,CAAiB,MAAI,CAAChB,KAAL,CAAWI,EAA5B,CAAN,EAAjB,MADD,CAGC,EAJJ,CAME,4BAAM,SAAS,CAAC,iBAAhB,EAAmC,KAAKJ,KAAL,CAAWc,IAA9C,CANF,CAOG,KAAKb,KAAL,CAAWC,SAAX,CACC,oBAAC,YAAD,CAAkB,KAAKD,KAAL,CAAWE,aAA7B,CADD,CAGC,EAVJ,CADF,CAeD,CA5CH,0BAAkCN,SAAlC,EA+CA,cAAeE,CAAAA,YAAf","sourcesContent":["import React, { Component } from \"react\"\r\nimport \"./TreeListItem.css\"\r\nimport axios from \"axios\"\r\n\r\nexport class TreeListItem extends Component<any, any> {\r\n  public constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      showPopup: false,\r\n      itemChildData: []\r\n    }\r\n  }\r\n\r\n  public getChildren(id: number) {\r\n    console.log(id)\r\n    //get elements for which current id == parent id\r\n    axios\r\n      .get(\"http://5e4a36256eafb7001488c115.mockapi.io/elements\")\r\n      .then(response => {\r\n        console.log(response.data)\r\n      })\r\n      .catch((error: any) => {\r\n        console.log(error)\r\n      })\r\n\r\n    this.setState({\r\n      showPopup: !this.state.showPopup,\r\n      itemChildData: { name: \"mock\", parentId: \"1\" }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <div className='tree-list__item'>\r\n        {this.props.parentId == null ? (\r\n          <button onClick={() => this.getChildren(this.props.id)}>></button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <span className='tree-list__text'>{this.props.name}</span>\r\n        {this.state.showPopup ? (\r\n          <TreeListItem {...this.state.itemChildData} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TreeListItem\r\n"]},"metadata":{},"sourceType":"module"}